You need to be a super user to do all this
Install Node from http://nodejs.org/download/ which by default installs npm
Install Express by "npm install -g express". By default, the npm modules get installed into C:\Users\${userId}\AppData\Roaming\npm\node_modules\express
In order to change this, please create the below directories
npm config --global set prefix "C:\Users\${userId}\npm"
npm config --global set cache "C:\Users\${userId}\npm-cache"
Add C:\Users\${userId}\npm to your System's Path environment variable

Create a express project "express test" for scaffolding. cd test ; npm install;
In order to replace jade templating, you can use "express test2 --hogan -c(css) less";npm install. This would include hjs and mess-middleware in package.json
Run DEBUG=myapplication(Go to bin/www) ./bin/wwwhttp://localhost:3000

Note: Express runs as web server itself, this loads whole application in memory, waits for requests and responds.
Note2: Everytime, you make a change you need to restart node. Instead install nodemon "npm install -g nodemon" and then nodemon ./bin/www

In app.js:
app.set('views', path.join(__dirname, 'views')); //Setting the default views directory to views folder(index.html with hogan templating)
app.set('view engine', 'hjs');

//Telling your routes
var routes = require('./routes/index'); //Referring the return value from model.exports from index.js
app.use('/', routes);
app.use('/users', users);
In index.js
var express = require('express');
var router = express.Router();
router.get('/', function(req, res) {
   res.send("Text"); //Send Plain Text
   res.send(200); //Send HTTP Code
   res.render('index', {title: 'Muthu', age: 31}); //Looks for index.html file under views and pass the arguments to this
});

http://localhost:9000?age=3&name=Muthu
router.get('/', function(req, res) {
   console.log(req.query);
   
});

http://localhost:9000/users/123
router.get('/user/:id', function(req, res) {
   console.log(req.params);
   
});

module.exports = router; //Return value of the whole file is router

//Error Handling
app.use(function(req, res, next) {
   var err = new Error('Not Found');
   err.status = 404;
   next(err);
});   


